# US 8 - Register a new clinical analysis laboratory stating which kind of test(s) it operates

## 1. Requirements Engineering

*In this section, it is suggested to capture the requirement description and specifications as provided by the client as well as any further clarification on it. It is also suggested to capture the requirements acceptance criteria and existing dependencies to other requirements. At last, identfy the involved input and output data and depicted an Actor-System interaction in order to fulfill the requirement.*

### 1.1. User Story Description

As an administrator, I want to register a new clinical  analysis laboratory stating which kind of test(s) it operates.

### 1.2. Customer Specifications and Clarifications 

*Insert here any related specification and/or clarification provided by the client together with **your interpretation**. When possible, provide a link to such specifications/clarifications.*

**_From the Specifications Document_**

“Many Labs has a network of clinical analysis laboratories in England where analysis of blood(samples are collected)are performed, as well as Covid-19 tests. All Many Labs clinical analysis laboratories perform clinical blood tests,and a subset of these laboratories also performs Covid-19 tests. To register a clinical analisis laboratory , the administrator needs laboratory Id, name, address, phone number and TIN number and needs to stat which kind of test(s) it operates.”

**_From the client clarifications_**

-	**Question:** What kind of atributes does Clinical Analysis Laboratory has?

	- 	**Answer:** Each Clinical Analysis Laboratory is characterized by the following attributes:
Laboratory ID;
Name;
Address;
Phone Number;
TIN number.


### 1.3. Acceptance Criteria

    AC1: All required fields must be filled in.
    

### 1.4. Found out Dependencies

Dependency to "US9 Create new Type of Test" since one or more tests types must exist in order to state the type(s) of test(s) performed in a laboratory.

### 1.5 Input and Output Data

- Input Data
	- Typed data: Laboratory ID;
                      Name;
                      Address;
                      Phone Number;
                      TIN number.
	- Selected data: Type(s) of test(s)
- Output Data
	- (In)Success of the operation


### 1.6. System Sequence Diagram (SSD)

![UC8_SSD](UC8_SSD_SVG.svg)

### 1.7 Other Relevant Remarks

This US will be used every time that one parameter doesn't have an appropriated category.

## 2. OO Analysis

### 2.1. Relevant Domain Model Excerpt

![US11-MD](US11-MD.svg)

### 2.2. Other Remarks

## 3. Design - User Story Realization 

### 3.1. Rationale

**The rationale grounds on the SSD interactions and the identified input/output data.**

| Interaction ID | Question: Which class is responsible for... | Answer  | Justification (with patterns)  |
|:-------------  |:--------------------- |:------------|:---------------------------- |
| Step 1: Starts new parameter category | ... instantiating a new Parameter Category?| Company | Creator: R1/2 |
| Step 2: Request Data | n/a							 | n/a            | n/a                             |
| Step 3: Types requested data |	... saving the input data? | Category | IE: The object created in step 1 has its own data.                              |
| Step 4: Show the data and requests a confirmation | ... validating the data locally? | Category | IE: knows its own data |
| Step 4: Show the data and requests a confirmation | ... validating the data globally? | Company | IE: knows all the ParameterCategory objects |
| Step 5: Confirms the data |	... saving the created parameter category? | Company | IE: adopts/records all the ParameterCategory objects |
| Step 6: Informs operation success | ... informing operation success? | createdParameterCategoryUI | IE: responsible for user interaction |                              |              

### Systematization ##

According to the taken rationale, the conceptual classes promoted to software classes are: 

 * Company
 * Category

Other software classes (i.e. Pure Fabrication) identified: 

 * createdParameterCategoryUI
 * createdParameterCategoryController

## 3.2. Sequence Diagram (SD)

![UC11_SD](UC11_SD.svg)

## 3.3. Class Diagram (CD)

*In this section, it is suggested to present an UML static view representing the main domain related software classes that are involved in fulfilling the requirement as well as and their relations, attributes and methods.*

![UC11_CD](UC11_CD.svg)

# 4. Tests 
*In this section, it is suggested to systematize how the tests were designed to allow a correct measurement of requirements fulfilling.* 

**_DO NOT COPY ALL DEVELOPED TESTS HERE_**

**Test 1:** Check that it is not possible to create an instance of the Example class with null values. 

	@Test(expected = IllegalArgumentException.class)
		public void ensureNullIsNotAllowed() {
		Exemplo instance = new Exemplo(null, null);
	}

*It is also recommended to organize this content by subsections.* 

# 5. Construction (Implementation)

*In this section, it is suggested to provide, if necessary, some evidence that the construction/implementation is in accordance with the previously carried out design. Furthermore, it is recommeded to mention/describe the existence of other relevant (e.g. configuration) files and highlight relevant commits.*

*It is also recommended to organize this content by subsections.* 

# 6. Integration and Demo 

*In this section, it is suggested to describe the efforts made to integrate this functionality with the other features of the system.*


# 7. Observations

*In this section, it is suggested to present a critical perspective on the developed work, pointing, for example, to other alternatives and or future related work.*
